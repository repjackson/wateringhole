.ui.container
    with importerDoc
        .ui.segment
            .ui.form
                .field
                    label.active(for='importerName') Importer Name
                    input#importerName(type='text' value=name)
                .field
                    label.active(for='importerTag') Importer Tag (included with all documents imported to facilitate future editing)
                    input#importerTag(type='text' value=importerTag)
                unless uploading
                    .field
                        span Upload CSV File
                        input(type='file' name='uploadCSV' accept='.csv')
                        .file-path-wrapper
                            input.file-path.validate(type='text' value=fileName)
                        p #{downloadUrl}
                else
                    p
                        i.fa.fa-spin.fa-refresh
                        |Uploading files...
                if fieldsObject
                    table.responsive-table.striped
                        thead
                            tr
                                th Field Name
                                th First Row Data Example
                                th Action
                        tbody
                            each fieldsObject
                                tr
                                    td #{this.name}
                                    td #{this.firstValue}
                                    // td
                                    //     .field.col.s12
                                    //         select.browser-default.typeSelector(id="#{this.name}")
                                    //             option(value='', disabled='') Choose Data Type/Action
                                    //             option(value='1' selected="{{selectedDataType 1}}") Direct Tag
                                    //             option(value='2' selected="{{selectedDataType 2}}") Time/Date
                                    //             option(value='3' selected="{{selectedDataType 3}}") Geo
                                    //             option(value='4' selected="{{selectedDataType 4}}") Skip
                                    //         // label Pick Data Type
                                    td
                                        input.toggleTag(type="checkbox" id="#{this.name}" checked="#{this.tag}")
                                        label(for="#{this.name}") Tag
                // .row
                //     .ui.button#testImporter Test Importer
                if testDoc
                    .card-panel
                        .card-title Test Doc
                        .card-content
                            each testDoc.tags
                                .chip= this
                #runImporter.ui.button Run Importer
            .card-action
                .ui.button#saveImporter Save
                .ui.button#deleteImporter Delete
        // Editor
        // .card
        //     .card-content
        //         #cleanNonStringTags.ui.button Clean Non String Tags From My Docs
        //         #alchemize.ui.button Autotag all my docs
        .ui.segment
            .card-content
                .card-title Bulk Editor
                p Tag Selector: #{importerTag}
                // .field-input.col.s6
                //     label.active(for='tagSelector' va)  Tag Selector
                //     input#tagSelector(type=text value="{{$.Session.get 'query'}}" autofocus='')
                #findDocsWithTag.ui.button Find Docs with Tag
                .field
                    label.active(for='importAmount') Import Amount
                    input#importAmount(type='number' value=importAmount)
                if $.Session.get 'resultCount'
                    .card
                        .card-content
                            |Result Count: {{$.Session.get 'resultCount'}}
                            .row
                                if docTagCloudFromImporter
                                    each docTagCloudFromImporter
                                        .chip
                                            span #{this.name}
                                            small #{this.count}
                            .row
                                #deleteQueryDocs.ui.button Delete Query Docs
                // .row
                //     .firstDocFromQuery First Result From Query
